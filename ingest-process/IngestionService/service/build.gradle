plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'io.tracksystem'
version = '0.0.1-SNAPSHOT'
description = 'This microservice is useful for ingesting massive data from IoT devices.'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
  set('springCloudVersion', "2024.0.0")
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	// Eureka Discovery Client
	// implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	
	// PostgreSQL dependencias
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql:42.7.3'

	// Usar Spring Cloud Discovery Client para registros de servicios
    // implementation 'org.springframework.cloud:spring-cloud-starter-discovery'

    // Opcional: OpenFeign para llamadas entre servicios
    // implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

tasks.named('test') {
	useJUnitPlatform()
}
